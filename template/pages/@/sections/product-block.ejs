<%
const stamps = _.cms('stamps') || {}
let stampsList
if (stamps && Array.isArray(stamps.stamps_list) && stamps.stamps_list.length) {
  stampsList = stamps.stamps_list
}

const apx_properties = _.cms('apx_properties') || {}
const apx_countries = _.cms('apx_countries') || {}
const apx_productSpecialistReview = _.cms('apx_productSpecialistReview') || {}
const apx_productBenefits = _.cms('apx_productBenefits') || {}

let brand = false

try{
  if(_.state.brands && _.state.brands[0]._id){
    await _.ecomClient.store({
      url: `/brands/${_.state.brands[0]._id}.json`
    }).then(response => {
      brand = response.data
      //console.log(response.data)
    })
  }
}catch(e){
  console.log(e)
}

//console.log(_.state)
%>

<div id="product-block" class="product-block my-4 mb-lg-5">
  <div class="container">
    <section
      id="product"
      class="product"
      data-to-render="true"
      data-product-id="<%= _.state._id %>"
      data-sku="<%= _.state.sku %>"
    >
      <div id="product-dock">
        <!--
          `TheProduct` should be rendered (hydrated) here:
          https://developers.e-com.plus/storefront/@ecomplus/storefront-components/docs/TheProduct.html
        -->
      </div>

      <div class="row align-items-center gallery-and-actions">
        <div class="col-12 col-md-6 mb-4">
          <!-- Picture(s) gallery will be inserted dynamically within `TheProduct` -->
          <% if (_.state.pictures) { %>
            <% const imgObj = _.ecomUtils.img(_.state, null, 'big') %>
            <% if (imgObj) { %>
              <% const [width, height] = (imgObj.size || '').split('x').map(px => parseInt(px, 10)) %>
              <div id="product-gallery">
                <div data-slot="stamps">
                  <% if (Array.isArray(stampsList) && stampsList.length) { %>
                    <div class="product__stamps">
                      <% for (stamp of stampsList) { 
                        if (stamp.img && (!stamp.skus || !stamp.skus.length || stamp.skus.includes(_.state.sku))) {
                          %>
                          <span class="product__stamps-<%= stamp.id && stamp.id.toLowerCase().replace(/\s/g, '-') %>">
                            <img src="<%= stamp.img %>" alt="<%= stamp.id %>">
                          </span>
                        <% } %>
                      <% } %>
                    </div>
                  <% } %>
                </div>
                <div
                  class="product__picture"
                  <% if (width) { %>
                    style="max-width: <%= width %>px"
                  <% } %>  
                >
                  <picture
                    <% if (width && height) { %>
                      class="picture"
                      style="--aspect-ratio-pc: <%= Math.round(height * 100 * 10000 / width) / 10000 %>%"
                    <% } %>
                  >
                    <source
                      srcset="<%= _.ecomUtils.img(_.state).url %>"
                      type="image/webp"
                      media="(max-width: 399.98px)"
                    >
                    <source
                      srcset="<%= imgObj.url %>"
                      type="image/webp"
                      media="(min-width: 400px)"
                    >
                    <img
                      src="<%= imgObj.url.replace(/\.webp$/, '') %>"
                      alt="<%= imgObj.alt || _.state.name %>"
                      <% if (imgObj.url.startsWith('https://ecoms1.com/')) { %>
                        crossorigin="anonymous"
                      <% } %>
                      <% if (height) { %>
                        width="<%= width %>"
                        height="<%= height %>"
                      <% } %>
                    >
                  </picture>
                </div>
              </div>
            <% } %>
          <% } %>
          <!-- Custom additional code on bottom of images gallery -->
        </div>

        <div class="col">
          <div class="product__name-block">
            <% if (_.state.brands){ %>
              <h1 class="product__name">            
                <small class="apx_brand"><%= _.state.brands[0].name %></small>
                <%= _.ecomUtils.name(_.state).replace(_.state.brands[0].name,'')  %>
              </h1>
              
            <% }else{ %>
            <h1 class="product__name">            
              <%= _.ecomUtils.name(_.state) %>
            </h1>
            <% } %>
            <p class="product__sku">
              COD: <%= _.state.sku %>
            </p>
          </div>
          <div id="apx_product_props" class="my-4">
            
            <% if (_.state.specifications && _.state.specifications['pais']){ %>
              <small class="apx_origin">
                <%
                  let countryFlag = apx_countries.countries.find(el => el.title.toLowerCase().trim() == _.state.specifications['pais'][0].text.toLowerCase().trim()) ? 'url(' + apx_countries.countries.find(el => el.title.toLowerCase().trim() == _.state.specifications['pais'][0].text.toLowerCase().trim()).image + ')' : '#f2f2f2'
                  //console.log(apx_countries.countries.find(el => el.title.toLowerCase().trim() == _.state.specifications['pais'][0].text.toLowerCase().trim()))
                  
                %>
                <span class="apx_country-flag" style="background:<%= countryFlag %>"></span>
                <span class="apx_country-name">
                  <%= _.state.specifications['pais'][0].text %>
                </span>
                <% if (_.state.specifications['regiao']){ %>
                  <span class="apx_country-region">, <%= _.state.specifications['regiao'][0].text %></span>
                <% } %>
              </small>
            <% } %>  

            <% if (_.state.specifications){ %>
                <% for (let item in _.state.specifications){ %>
                  <% if (['uvas','tipo_de_vinho'].includes(item)){ %>
                      <small class="apx_otherProps">
                      <% if (apx_properties.props.find(el => el.title == _.ecomUtils.gridTitle(item, _.grids))){ %>
                        <img src="<%= apx_properties.props.find(el => el.title == _.ecomUtils.gridTitle(item, _.grids)).image %>"/>
                      <% } %>                  
                        <span title="<%= _.ecomUtils.specTextValue(_.state, item, _.grids) %>"><%= _.ecomUtils.specTextValue(_.state, item, _.grids) %></span>                      
                      </small>  
                  <% } %>
                <% } %>
            <% } %>
          </div>

          <div id="product-actions" class="my-4">
            <div id="product-loading">
              <% if (_.state.available && _.state.visible && _.ecomUtils.inStock(_.state)) { %>
                <div class="product__price prices prices--big">
                  <strong class="prices__value">
                    <%= _.ecomUtils.formatMoney(_.ecomUtils.price(_.state)) %>
                  </strong>
                </div>
              <% } %>

              <% if (_.state.variations && _.state.variations.length) { %>
                <div data-slot="variations-info">
                  <!-- Custom info for products with variations, such as sizes table link -->
                  <% if (opt.size_guide && opt.size_guide.image) { %>
                    <% const sizeGuideTitle = opt.size_guide.title || _.dictionary('sizeGuide') %>
                    <div class="mb-3">
                      <a 
                        href="javascript:;"
                        data-toggle="modal"
                        data-target="#modal-size-guide"
                      >
                        <i class="i-ruler mr-1"></i> <%= sizeGuideTitle %>
                      </a>
                    </div>
                    <div 
                      class="modal modal-center fade" 
                      id="modal-size-guide" 
                      tabindex="-1" 
                      style="display: none;" 
                      aria-hidden="true"
                    >
                      <div class="modal-dialog">
                        <div class="modal-content">
                          <div class="modal-header d-flex align-items-center justify-content-between">
                            <h5 class="modal-title">
                              <%= sizeGuideTitle %>
                            </h5>
                            <button type="button" class="close" data-dismiss="modal">
                              <span aria-hidden="true">&times;</span>
                            </button>
                          </div>
                          <div class="modal-body">
                            <img 
                              class="img-fluid" 
                              src="<%= opt.size_guide.image %>" 
                              alt="<%= sizeGuideTitle %>"
                            >
                          </div>
                        </div>
                      </div>
                    </div>
                  <% } %>
                </div>
              <% } %>

              <div class="spinner-border m-4" role="status">
                <span class="sr-only">Loading...</span>
              </div>

              <div class="product__buy">
                <button
                  type="button"
                  class="btn btn-lg btn-primary"
                  onclick="ecomCart.addProduct(storefront.context.body)"
                  <% if (_.state.variations && _.state.variations.length) { %>
                    disabled
                  <% } %>
                >
                  <div data-slot="buy-button-content">
                    <% if (_.state.kit_composition && _.state.kit_composition.length) { %>
                      <%= _.dictionary('buyKit') %>
                    <% } else { %> 
                      <% let buyText %>
                      <% if (Array.isArray(_.widgets)) { %>
                        <% const productWidget = _.widgets.find(item => item.pkg === '@ecomplus/widget-product') %>
                        <% buyText = productWidget && productWidget.options.buyText %>
                      <% } %>
                      <%= buyText || _.dictionary('buy') %> Agora
                    <% } %>                    
                  </div>
                </button>
              </div>
            </div>
          </div>

          <% if (apx_productBenefits) { %>
            <div class="apx_productBenefits my-4">
              <% for (let item in apx_productBenefits.benefits){ %>
                <div class="row my-2">
                  <div class="col-12 item">
                    <% if (apx_productBenefits.benefits[item].image){ %>
                      <span class="img-block"><img src="<%= apx_productBenefits.benefits[item].image %>"/></span>
                    <% } %>                  
                    <div>
                      <strong><%= apx_productBenefits.benefits[item].title %></strong>
                      <span><%= apx_productBenefits.benefits[item].description %></span>
                    </div>
                  </div>
                </div>
              <% } %>
            </div>
          <% } %>
          

          <% if (_.state.short_description) { %>
            <p class="product__info mt-3 lead">
              <%= _.state.short_description %>
            </p>
          <% } %>
        </div>
      </div>

      <div class="container-small">
        <% if (_.state.specifications){ %>
          <section id="apx_gauge" class="my-5">
            <h2 class="mb-3">Ficha Técnica</h2>
            <div class="row justify-content-between">
              <% if (_.state.specifications.docura){ %>
                <div class="col-md-5 col-12 item mb-3">
                  <strong>Doçura</strong>
                  <div class="apx_gauge-metter">
                    <div class="apx_gauge-value" style="width:<%= parseInt(_.state.specifications.docura[0].value) * 10 %>%"></div>
                  </div>
                </div>
              <% } %>
              <% if (_.state.specifications.acidez){ %>
                <div class="col-md-5 col-12 item mb-3">
                  <strong>Acidez</strong>
                  <div class="apx_gauge-metter">
                    <div class="apx_gauge-value" style="width:<%= parseInt(_.state.specifications.acidez[0].value) * 10 %>%"></div>
                  </div>
                </div>
              <% } %>
              <% if (_.state.specifications.tanino){ %>
                <div class="col-md-5 col-12 item mb-3">
                  <strong>Tanino</strong>
                  <div class="apx_gauge-metter">
                    <div class="apx_gauge-value" style="width:<%= parseInt(_.state.specifications.tanino[0].value) * 10 %>%"></div>
                  </div>
                </div>
              <% } %>
              <% if (_.state.specifications.frutado){ %>
                <div class="col-md-5 col-12 item mb-3">
                  <strong>Frutado</strong>
                  <div class="apx_gauge-metter">
                    <div class="apx_gauge-value" style="width:<%= parseInt(_.state.specifications.frutado[0].value) * 10 %>%"></div>
                  </div>
                </div>
              <% } %>
            </div>
          </section>
        <% } %>

        <% if (_.state.specifications){ %>
          <section id="apx_specifications" class="my-5">
            <h2 class="mb-3">Características</h2>
            <div class="row align-items-start">
              <% for (let item in _.state.specifications){%>
                <% if (!['docura','tanino','acidez','frutado'].includes(item)){ %>
                <div class="col-md-3 col-12 item mb-3">
                  <div class="apx_specifications-item d-flex align-items-center">
                    <% if (apx_properties.props.find(el => el.title == _.ecomUtils.gridTitle(item, _.grids))){ %>
                      <img src="<%= apx_properties.props.find(el => el.title == _.ecomUtils.gridTitle(item, _.grids)).image %>"/>
                    <% } %>                  
                    <div>
                      <strong><%= _.ecomUtils.gridTitle(item, _.grids) %></strong>
                      <span title="<%= _.ecomUtils.specTextValue(_.state, item, _.grids) %>"><%= _.ecomUtils.specTextValue(_.state, item, _.grids) %></span>
                    </div>
                  </div>
                </div>
                <% } %>
              <% } %>
              
            </div>
          </section>
        <% } %>
        <% if (_.state.specifications && _.state.specifications.sku && apx_productSpecialistReview.reviews.find(el => el.sku == _.state.specifications.sku)){ %>
          <section id="apx_specialistReview" class="my-5">
            <h2 class="mb-3">Opinião da Especialista</h2>
            <div class="row align-items-center">
              <div class="col-md-auto col-12">
                <img src="https://via.placeholder.com/310x273" class="w-100"/>
              </div>
              <div class="col">
                <h3 class="mb-3">Elaine de Oliveira
                  <small>Sommelière da AmaiVinhos</small>
                </h3>
                <p>
                  <%= apx_productSpecialistReview.reviews.find(el => el.sku == _.state.specifications.sku).description %>
                </p>
              </div>
              
            </div>
          </section>
        <% } %>

        
      </div>      
    </section>
  </div>
      
    <%  if (brand) { 
      
      const search = new _.EcomSearch()
      await search.setBrandIds([brand._id]).fetch(true)
      const items = search.getItems().filter(item => _.ecomUtils.inStock(item))
      %>
      <section
        class="apx_product-list brand-related my-md-5 my-3"
        data-num_col_sm="1"
        data-carrossel_sm="Não"
        data-num_col_md="2"
        data-carrossel_md="Não"
        data-carrossel_dots_md="Não"
        data-carrossel_arrows_md="Sim"
        data-carrossel_dots_sm="Não"
        data-carrossel_arrows_sm="Sim"
        style="background:<%= brand.pictures && brand.pictures[0].url ? 'url('+ brand.pictures[0].url +')' : 'var(--red)'%>"
      >
        <div class="container-small py-md-5 py-4 px-md-0 px-3">
          <div class="row align-items-center">
            <div class="col-12 col-md-4 content">
              <h2 class="mb-4"><%= brand.name ? brand.name : ''%></h2>
              <div><%- brand.short_description ? brand.short_description : ''%></div>
              <a class="mt-5 px-4" href="<%- brand.slug ? brand.slug : ''%>">Ver Mais</a>
            </div>  
            <div class="col-12 col-md-8">
              <div class="row list mx-0">        
                <% for (let i = 0; i < items.length; i++) { %>
                  <div class="col-md-6 col-12 my-4">
                    <%- await include('@/sections/inc/product-item', {
                      _, opt: { item: items[i] }
                    }) %>
                  </div>
                <% } %>          
              </div>
            </div>          
          </div>
        </div>
      </section>
    <% } %>
  <%  %>

  <%- await include('@/helpers/widgets-append', {
    _, opt: {}, field: 'productSlots'
  }) %>

  <%- await include('@/helpers/widgets-append', {
    _, opt: {}, field: 'productBlockAppend'
  }) %>
</div>



<%
const productJsonLd = {
  '@context': 'http://schema.org',
  '@type': 'Product',
  sku: _.state.sku,
  description: _.state.short_description || _.state.meta_description || _.ecomUtils.name(_.state),
  name: _.ecomUtils.name(_.state),
  offers: {
    '@type': 'Offer',
    url: `https://${_.settings.domain}/${_.state.slug}`,
    availability: `${(_.ecomUtils.inStock(_.state) ? 'In' : 'OutOf')}Stock`,
    priceCurrency: _.settings.currency,
    price: _.ecomUtils.price(_.state),
    itemCondition: `http://schema.org/${(_.state.condition === 'new' ? 'New' : 'Used')}Condition`,
    priceValidUntil: _.ecomUtils.onPromotion(_.state) && _.state.price_effective_date && _.state.price_effective_date.end
      ? _.state.price_effective_date.end.slice(0, 10)
      : undefined,
    seller: {
      '@type': 'Organization',
      name: _.settings.name || _.store.name
    }
  }
}
if (_.state.brands && _.state.brands[0]) {
  productJsonLd.brand = {
    '@type': 'Brand',
    name: _.state.brands[0].name
  }
}
if (_.state.pictures && _.state.pictures.length) {
  productJsonLd.image = _.ecomUtils.img(_.state, null, 'zoom').url
    .replace(/(\w+\.)?(ecoms\d)\.com/i, '$2-nyc3.nyc3.cdn.digitaloceanspaces.com')
}
if (_.state.mpn && _.state.mpn[0]) {
  productJsonLd.mpn = _.state.mpn[0]
}
if (_.state.gtin && _.state.gtin[0]) {
  productJsonLd.gtin = _.state.gtin[0]
}
%>
<script id="product-block-jsonld" type="application/ld+json"><%-
  JSON.stringify(productJsonLd)
%></script>
<script type="text/javascript">
  setTimeout(() => {
    const urlParams = new URLSearchParams(window.location.search);
    const variationId = urlParams.get('variation_id');
    const variations = window._context.body && window._context.body.variations;
    if (Array.isArray(variations) && variationId) {
      const selectedVariation = variations.find(variation => variation._id === variationId);
      if (selectedVariation) {
        const $jsonLd = document.querySelector('#product-block-jsonld');
        const jsonLd = JSON.parse($jsonLd.innerText);
        jsonLd.sku = selectedVariation.sku;
        jsonLd.offers.price = selectedVariation.price;
        document.querySelector('#product-block-jsonld').innerText = JSON.stringify(jsonLd);
      }
    }
  }, 50);
</script>
